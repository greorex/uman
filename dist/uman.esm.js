/* @preserve
 * uman, v0.4.3
 * Units manager javascript library to orchestrate web workers
 * (c) 2019-2020 Grigory Schurovski 
 * Released under the Apache-2.0 license
 */
const t={EVENT:"event",REQUEST:"request",RESPONSE:"response",RECEIPT:"receipt"},e={ALL:"all",THIS:0};class s{constructor(){return this.options={},this.name="",this.units=this._proxyUnits(),this._unitsProxy={},this._proxyThis()}terminate(){}_proxyThis(){const t={emit:this._emitFunction(e.THIS)};return new Proxy(this,{get:(s,n)=>n in s?s[n]:n in t?t[n]:this._requestFunction(e.THIS,n)})}_proxyTarget(t){const e=this._unitsProxy[t];if(e)return e;const s={emit:this._emitFunction(t)};return this._unitsProxy[t]=new Proxy(s,{get:(e,s)=>s in e?e[s]:this._requestFunction(t,s)})}_proxyUnits(){const t={emit:this._emitFunction(e.ALL)};return new Proxy(t,{get:(t,e)=>e in t?t[e]:this._proxyTarget(e)})}_emitFunction(e){return(s,n)=>this._redispatch({type:t.EVENT,target:e,method:s,payload:n})}_requestFunction(e,s){return(...n)=>this._redispatch({type:t.REQUEST,target:e,method:s,payload:n})}_onevent(t){const{method:e,payload:s,sender:n}=t;if(n){const t=this._unitsProxy[n];if(t){const n=`on${e}`;if(n in t&&t[n](s))return}const i=`on${n}${e}`;if(i in this&&this[i](s))return}const i=`on${e}`;i in this&&this[i](t)}_oncall(t){const{method:e,payload:s}=t;return this[e](...s)}_dispatch(e){switch(e.type){case t.EVENT:return this._onevent(e);case t.REQUEST:return this._oncall(e)}}_redispatch(t){return this._dispatch(t)}}class n extends s{constructor(t){super(),this._c=new Map,this._n=0,this.options.timeout=5e3,this.postMessage=(...e)=>{t.postMessage(...e)},t.onmessage=t=>{this._onmessage(t)}}onmessage(t){}_onmessage(e){const{data:s}=e;if(s instanceof Object)switch(s.type){case t.EVENT:return this._onevent(s);case t.REQUEST:return this._onrequest(s);case t.RESPONSE:return this._onresponse(s);case t.RECEIPT:return this._onreceipt(s)}this.onmessage(e)}_dispatch(e){switch(e.type){case t.EVENT:return this.postMessage(e);case t.REQUEST:return new Promise((t,s)=>{const n={resolve:t,reject:s};e.cid=++this._n,this.options.timeout&&(n.timeout=setTimeout(()=>{this._onresponse({cid:e.cid,error:"Timeout on request "+e.method})},this.options.timeout)),this._c.set(e.cid,n),this.postMessage(e)})}}async _onrequest(e){const s={cid:e.cid};s.type=t.RECEIPT,this.postMessage(s);try{s.result=await this._oncall(e)}catch(t){s.error=t}s.type=t.RESPONSE,this.postMessage(s)}_onresponse(t){const{cid:e,result:s,error:n}=t,i=this._c.get(e);i&&(i.timeout&&clearTimeout(i.timeout),this._c.delete(e),n?i.reject(new Error(n)):i.resolve(s))}_onreceipt(t){const e=this._c.get(t.cid);e&&e.timeout&&clearTimeout(e.timeout)}}class i extends n{constructor(t){super(t),this.terminate=()=>t.terminate()}_onevent(t){return t.target?this._redispatch(t):super._onevent(t)}_oncall(t){return t.target?this._redispatch(t):super._oncall(t)}}class r extends n{constructor(t=self){super(t)}}const o=()=>self&&!self.window&&self.postMessage instanceof Function&&self.importScripts instanceof Function?r:s;class c extends(o()){static instance(t){return o()===r?new t:t}}class a{constructor(t={}){this._units={},this._copyUnitsEntry(t),this.units=this._proxyUnits()}_proxyUnits(){return new Proxy(this._units,{get:(t,e)=>{const n=t[e];return n instanceof s?n:n instanceof Function?this._attachUnit(e,n):n}})}_attachUnit(t,e){let n;if(e instanceof Function&&(e=e()),e instanceof Worker&&(n=new i(e)),e instanceof Promise&&(n=new s,n._dispatch=async t=>{let s=await e.then();return s.default instanceof Function&&(s=new s.default),s=this._attachUnit(n.name,s),s._dispatch(t)}),n||(n=e),!(n instanceof s))throw new Error("Wrong class of unit: "+t);return n.name=t,n._redispatch=t=>t.target?(t.sender=n.name,this._redispatch(t)):n._dispatch(t),this._units[t]=n}_copyUnitsEntry(t){for(let e of Object.entries(t)){const[t,n]=e;if(this._units[t])throw new Error("Unit "+n+" already exists");if("string"!=typeof t||"emit"===t)throw new Error("Wrong unit name: "+t);if(n instanceof s)this._attachUnit(t,n);else{if(!(n instanceof Function))throw new Error("Wrong unit value: "+n);this._units[t]=n}}}_redispatch(t){const{target:n,sender:i}=t;switch(n){case e.ALL:for(let e of Object.keys(this._units))if(e!==i){const n=this._units[e];n instanceof s&&n._dispatch(t)}return;default:const r=this.units[n];if(r instanceof s)return r._dispatch(t)}throw new Error("Wrong target unit: "+n)}addUnits(t){return this._copyUnitsEntry(t),this}deleteUnit(t){const e=this._units[t];e instanceof s&&e.terminate(),e&&delete this._units[t]}deleteAll(){for(let t of Object.keys(this._units))this.deleteUnit(t)}}export{t as MessageType,e as TargetType,c as Unit,s as UnitBase,i as UnitWorker,r as UnitWorkerSelf,a as UnitsManager};
//# sourceMappingURL=uman.esm.js.map
